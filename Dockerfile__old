# Image based golang
FROM golang:1.15.7-buster AS build

RUN  mkdir -p /go/src \
  && mkdir -p /go/bin \
  && mkdir -p /go/pkg
ENV GOPATH=/go
ENV PATH=$GOPATH/bin:$PATH

RUN mkdir -p $GOPATH/src/app
WORKDIR $GOPATH/src/app

# First, were copying go mod and go sum for cache downloads in newer builds.
COPY go.mod .
COPY go.sum .

RUN go mod download -x
RUN go get github.com/githubnemo/CompileDaemon
RUN go mod verify

# Now, the rest of the project
COPY . $GOPATH/src/app

# Compiling
#CGO_ENABLED=0
RUN GOOS=linux GOARCH=amd64 go build -o /out/gorest.bin -p 4 -v ./cmd/server

# Another stage. From new container, copy binary. Now isn't needed golang development container.
FROM debian:buster
COPY --from=build ./out/gorest.bin /goRest/gorest.bin

# Temporaly, this is the manner of create the file. Will be better in new releases.
RUN touch /goRest/gorest.conf
RUN echo 'Server__Host=localhost' >> /goRest/gorest.conf
RUN echo 'Server__Port=8080' >> /goRest/gorest.conf
RUN echo 'Database__ConnectionString=mongodb+srv://gioialucasf:91701909Aa@cluster0.kbkdt.mongodb.net/goRest?retryWrites=true&w=majority' >> /goRest/gorest.conf
RUN echo 'Database__DbName=goRest' >> /goRest/gorest.conf

#ENTRYPOINT ["/goRest/gorest.bin"]
ENTRYPOINT CompileDaemon -log-prefix=false -build="go build ./cmd/api/" -command="./api"

EXPOSE 8080